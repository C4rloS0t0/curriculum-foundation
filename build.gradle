import org.asciidoctor.gradle.AsciidoctorTask
import javax.inject.Inject

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath "org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.18"
    classpath 'org.ajoberstar:gradle-git-publish:0.3.0'
  }
}
plugins {
  id "org.asciidoctor.convert" version "1.6.0"
}

ext {
  currentDate = new Date().format("d. MMM yyyy")
  // read document version from file "document.version"
  project.version = project.file("./document.version").text
  curriculumBaseName = "foundation-curriculum"
  addSuffixToCurriculum = { suffix ->
    for (extension in ["html", "pdf"]) {
      File source = new File("${buildDir}/${curriculumBaseName}.${extension}")
      File target = new File("${buildDir}/${curriculumBaseName}${suffix}.${extension}")

      source.renameTo(target)
    }
  }
}

class RenderCurriculumTask extends AsciidoctorTask {
  @Inject
  RenderCurriculumTask(String curriculumBaseName, String currentDate, String language, boolean withRemarks) {
    sourceDir = new File("./docs/")
    sources {
      include "index.adoc"
      include "${curriculumBaseName}.adoc"
    }
    outputDir = new File("./build/")
    separateOutputDirs = false
    backends 'pdf', 'html5'

    def fileVersion = project.file("./document.version").text + "-" + language

    attributes = [
      'icons'            : 'font',
      'revnumber'        : fileVersion,
      'revdate'          : currentDate,
      'currentDate'      : currentDate,
      'language'         : language,
      'withRemarks'      : withRemarks,
      'document-version' : fileVersion + " (" + currentDate + ")",
      'withFeedback'     : true,
      'debug_adoc'       : false,
      'pdf-stylesdir'    : '../pdf-theme/themes',
      'pdf-fontsdir'     : '../pdf-theme/fonts',
      'pdf-style'        : 'isaqb',
      'with-uniqe-LG-id' : false,
      'allow-uri-read': true
    ]
  }
}

task buildDocs {
	group 'Documentation'
	description 'Grouping task for generating all languages in several formats'
  dependsOn "renderNoRemarksDE", "renderNoRemarksEN", "renderWithRemarksDE_EN"
}

task renderNoRemarksDE(type: RenderCurriculumTask,
    constructorArgs: [curriculumBaseName, currentDate, "DE", false]) {
  doLast {
    addSuffixToCurriculum("-${project.version}-de")
  }
}

task renderNoRemarksEN(type: RenderCurriculumTask,
    constructorArgs: [curriculumBaseName, currentDate, "EN", false]) {
  doLast {
    addSuffixToCurriculum("-${project.version}-en")
  }
}

task renderWithRemarksDE_EN(type: RenderCurriculumTask,
    constructorArgs: [curriculumBaseName, currentDate, "DE;EN", true]) {
  doLast {
    addSuffixToCurriculum("-${project.version}-remarks-de-en")
  }
}

task publish(type: GradleBuild) {
  String travisPr = System.getenv('TRAVIS_PULL_REQUEST')
  if ("false".equals(travisPr)) {
      buildFile = 'publish.gradle'
      tasks = ['gitPublishPush']
  } else {
      println 'env var TRAVIS_PULL_REQUEST says we build for PR #' + travisPr + ', won\'t publish docs!'
  }
}

defaultTasks "buildDocs"
